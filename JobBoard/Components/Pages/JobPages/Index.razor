@page "/jobs"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FullStackProject.Domain
@using JobBoard.Data
@implements IAsyncDisposable
@inject IDbContextFactory<JobBoard.Data.JobBoardContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="jobs/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Job">
    <PropertyColumn Property="job => job.JobTitle" />
    <PropertyColumn Property="job => job.JobDescription" />
    <PropertyColumn Property="job => job.Requirements" />
    <PropertyColumn Property="job => job.Salary" />
    <PropertyColumn Property="job => job.Location" />
    <PropertyColumn Property="job => job.Status" />
    <PropertyColumn Property="job => job.EmployerID" />
    <PropertyColumn Property="job => job.JobCategoryID" />
    <PropertyColumn Property="job => job.DateCreated" />
    <PropertyColumn Property="job => job.DateUpdated" />
    <PropertyColumn Property="job => job.CreatedBy" />
    <PropertyColumn Property="job => job.UpdatedBy" />

    <TemplateColumn Context="job">
        <a href="@($"jobs/edit?id={job.Id}")">Edit</a> |
        <a href="@($"jobs/details?id={job.Id}")">Details</a> |
        <a href="@($"jobs/delete?id={job.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private JobBoardContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
