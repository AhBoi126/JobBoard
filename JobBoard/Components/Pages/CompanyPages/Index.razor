@page "/companies"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FullStackProject.Domain
@using JobBoard.Data
@implements IAsyncDisposable
@inject IDbContextFactory<JobBoard.Data.JobBoardContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="companies/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Company">
    <PropertyColumn Property="company => company.CompanyName" />
    <PropertyColumn Property="company => company.Industry" />
    <PropertyColumn Property="company => company.Location" />
    <PropertyColumn Property="company => company.Website" />
    <PropertyColumn Property="company => company.CompanyDescription" />
    <PropertyColumn Property="company => company.CompanyLogoPath" />
    <PropertyColumn Property="company => company.DateCreated" />
    <PropertyColumn Property="company => company.DateUpdated" />
    <PropertyColumn Property="company => company.CreatedBy" />
    <PropertyColumn Property="company => company.UpdatedBy" />

    <TemplateColumn Context="company">
        <a href="@($"companies/edit?id={company.Id}")">Edit</a> |
        <a href="@($"companies/details?id={company.Id}")">Details</a> |
        <a href="@($"companies/delete?id={company.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private JobBoardContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
