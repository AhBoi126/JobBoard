@page "/messages"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using FullStackProject.Domain
@using JobBoard.Data
@implements IAsyncDisposable
@inject IDbContextFactory<JobBoard.Data.JobBoardContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="messages/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Message">
    <PropertyColumn Property="message => message.MessageContent" />
    <PropertyColumn Property="message => message.ReadStatus" />
    <PropertyColumn Property="message => message.JobSeekerID" />
    <PropertyColumn Property="message => message.EmployerID" />
    <PropertyColumn Property="message => message.ChatBoxID" />
    <PropertyColumn Property="message => message.DateCreated" />
    <PropertyColumn Property="message => message.DateUpdated" />
    <PropertyColumn Property="message => message.CreatedBy" />
    <PropertyColumn Property="message => message.UpdatedBy" />

    <TemplateColumn Context="message">
        <a href="@($"messages/edit?id={message.Id}")">Edit</a> |
        <a href="@($"messages/details?id={message.Id}")">Details</a> |
        <a href="@($"messages/delete?id={message.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private JobBoardContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
