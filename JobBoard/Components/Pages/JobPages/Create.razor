@page "/jobs/create"
@using Microsoft.EntityFrameworkCore
@using FullStackProject.Domain
@inject IDbContextFactory<JobBoard.Data.JobBoardContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Job</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Job" OnValidSubmit="AddJob" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="jobtitle" class="form-label">JobTitle:</label> 
                <InputText id="jobtitle" @bind-Value="Job.JobTitle" class="form-control" /> 
                <ValidationMessage For="() => Job.JobTitle" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="jobdescription" class="form-label">JobDescription:</label> 
                <InputText id="jobdescription" @bind-Value="Job.JobDescription" class="form-control" /> 
                <ValidationMessage For="() => Job.JobDescription" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="requirements" class="form-label">Requirements:</label> 
                <InputText id="requirements" @bind-Value="Job.Requirements" class="form-control" /> 
                <ValidationMessage For="() => Job.Requirements" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="salary" class="form-label">Salary:</label> 
                <InputText id="salary" @bind-Value="Job.Salary" class="form-control" /> 
                <ValidationMessage For="() => Job.Salary" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="location" class="form-label">Location:</label> 
                <InputText id="location" @bind-Value="Job.Location" class="form-control" /> 
                <ValidationMessage For="() => Job.Location" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label> 
                <InputText id="status" @bind-Value="Job.Status" class="form-control" /> 
                <ValidationMessage For="() => Job.Status" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="employerid" class="form-label">EmployerID:</label> 
                <InputNumber id="employerid" @bind-Value="Job.EmployerID" class="form-control" /> 
                <ValidationMessage For="() => Job.EmployerID" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="jobcategoryid" class="form-label">JobCategoryID:</label> 
                <InputNumber id="jobcategoryid" @bind-Value="Job.JobCategoryID" class="form-control" /> 
                <ValidationMessage For="() => Job.JobCategoryID" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="datecreated" class="form-label">DateCreated:</label> 
                <InputDate id="datecreated" @bind-Value="Job.DateCreated" class="form-control" /> 
                <ValidationMessage For="() => Job.DateCreated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dateupdated" class="form-label">DateUpdated:</label> 
                <InputDate id="dateupdated" @bind-Value="Job.DateUpdated" class="form-control" /> 
                <ValidationMessage For="() => Job.DateUpdated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdby" class="form-label">CreatedBy:</label> 
                <InputText id="createdby" @bind-Value="Job.CreatedBy" class="form-control" /> 
                <ValidationMessage For="() => Job.CreatedBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="updatedby" class="form-label">UpdatedBy:</label> 
                <InputText id="updatedby" @bind-Value="Job.UpdatedBy" class="form-control" /> 
                <ValidationMessage For="() => Job.UpdatedBy" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/jobs">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Job Job { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddJob()
    {
        using var context = DbFactory.CreateDbContext();
        context.Job.Add(Job);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/jobs");
    }
}
