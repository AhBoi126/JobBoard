@page "/companies/delete"
@using Microsoft.EntityFrameworkCore
@using FullStackProject.Domain
@inject IDbContextFactory<JobBoard.Data.JobBoardContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Company</h2>
    <hr />
    @if (company is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CompanyName</dt>
            <dd class="col-sm-10">@company.CompanyName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Industry</dt>
            <dd class="col-sm-10">@company.Industry</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Location</dt>
            <dd class="col-sm-10">@company.Location</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Website</dt>
            <dd class="col-sm-10">@company.Website</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CompanyDescription</dt>
            <dd class="col-sm-10">@company.CompanyDescription</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CompanyLogoPath</dt>
            <dd class="col-sm-10">@company.CompanyLogoPath</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@company.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@company.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@company.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@company.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="company" OnValidSubmit="DeleteCompany" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(company is null)">Delete</button> |
            <a href="/companies">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Company? company;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        company = await context.Company.FirstOrDefaultAsync(m => m.Id == Id);

        if (company is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteCompany()
    {
        using var context = DbFactory.CreateDbContext();
        context.Company.Remove(company!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/companies");
    }
}
